/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Fomularios;

import Metodos.ConexionBD;
import Metodos.MetodosSql;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author José Pérez
 */
public class ReporteOt extends javax.swing.JFrame {

    /**
     * Creates new form ReporteOt
     */
    public ReporteOt() {
        initComponents();
        setLocationRelativeTo(null);
        block();
        filtroE();
        mostrarDatos();

    }

    MetodosSql Met = new MetodosSql();
    ConexionBD cc = new ConexionBD();
    Connection con = ConexionBD.conectar();

    public void filtroE() {

        String[] titulos = {"Num OT", "Solicitante", "Fecha", "Sector", "Detalle trabajo", "Prioridad", "Estado Solicitud", "Inicio", "Tipo trabajo", "Materiales", "Obs Responsable", "Estado", "Cierre"};
        String[] registros = new String[13];

    }

    public void block() {
        BtnBuscar2.setEnabled(false);
        BtnLimpiar2.setEnabled(false);
        Btnbuscar1.setEnabled(false);
        BtnLimpiar1.setEnabled(false);

    }

    public void mostrarDatos() {
        //CON ESTE METODO MOSTRAMOS EL CONTENIDO DE LA TABLA
        String[] titulos = {"Num OT", "Solicitante", "Fecha", "Sector", "Detalle trabajo", "Prioridad", "Estado Solicitud", "Inicio", "Tipo trabajo", "Materiales", "Obs Responsable", "Estado", "Cierre"};
        String[] registros = new String[13];

        DefaultTableModel modelo = new DefaultTableModel(null, titulos);

        String SQL = "SELECT * FROM querico.ordenesp";

        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);

            while (rs.next()) {

                registros[0] = rs.getString("ot");
                registros[1] = rs.getString("solicitante");
                registros[2] = rs.getString("fecha");
                registros[3] = rs.getString("sector");
                registros[4] = rs.getString("detalle");
                registros[5] = rs.getString("prioridad");
                registros[6] = rs.getString("estados");
                registros[7] = rs.getString("f_inicio");
                registros[8] = rs.getString("sector_def");
                registros[9] = rs.getString("materiales");
                registros[10] = rs.getString("obs_resp");
                registros[11] = rs.getString("estado");
                registros[12] = rs.getString("f_cierre");

                modelo.addRow(registros);

            }
            JTOtt.setModel(modelo);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al monstrar el mensaje" + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        Btnbuscar1 = new javax.swing.JButton();
        BtnLimpiar1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        JCEstados = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        RDPersonalizada = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        BtnBuscar2 = new javax.swing.JButton();
        BtnLimpiar2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        JCSectores = new javax.swing.JComboBox<>();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        RDSectores = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTOtt = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Reportes");
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("REPORTES");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Btnbuscar1.setText("Buscar");
        Btnbuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btnbuscar1ActionPerformed(evt);
            }
        });

        BtnLimpiar1.setText("Limpiar");
        BtnLimpiar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLimpiar1ActionPerformed(evt);
            }
        });

        jLabel2.setText("DESDE");

        jLabel3.setText("HASTA");

        JCEstados.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Proceso", "Suspendido", "Cerrado", "Otros" }));
        JCEstados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCEstadosActionPerformed(evt);
            }
        });

        jLabel4.setText("ESTADOS: ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(70, 70, 70)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BtnLimpiar1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Btnbuscar1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(33, 33, 33)
                        .addComponent(JCEstados, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JCEstados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(97, 97, 97))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Btnbuscar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnLimpiar1)
                .addContainerGap())
        );

        RDPersonalizada.setText("busqueda por estados:");
        RDPersonalizada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RDPersonalizadaActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        BtnBuscar2.setText("Buscar");
        BtnBuscar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBuscar2ActionPerformed(evt);
            }
        });

        BtnLimpiar2.setText("Limpiar");
        BtnLimpiar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLimpiar2ActionPerformed(evt);
            }
        });

        jLabel5.setText("SECTORES:");

        JCSectores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Playa", "Desplume", "Eviscerado", "Chiller", "Empaque", "Tunel Paletizado", "Trozado", "Otros" }));
        JCSectores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCSectoresActionPerformed(evt);
            }
        });

        jLabel6.setText("DESDE");

        jLabel7.setText("HASTA");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(33, 33, 33)
                        .addComponent(JCSectores, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jDateChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BtnLimpiar2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BtnBuscar2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel7)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JCSectores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(34, 34, 34)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(BtnBuscar2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnLimpiar2)
                        .addContainerGap())))
        );

        RDSectores.setText("Busqueda por Sectores");
        RDSectores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RDSectoresActionPerformed(evt);
            }
        });

        JTOtt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(JTOtt);

        jButton5.setText("IMPRIMIR ESTADOS");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("IMPRIMIR SECTORES");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1034, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RDPersonalizada)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(RDSectores))
                                .addGap(32, 32, 32)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(247, 247, 247)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RDPersonalizada)
                    .addComponent(RDSectores))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton5))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RDPersonalizadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RDPersonalizadaActionPerformed

        if (RDPersonalizada.isSelected() == true) {

            jDateChooser1.setEnabled(true);

            jDateChooser2.setEnabled(true);

            Btnbuscar1.setEnabled(true);
            BtnLimpiar1.setEnabled(true);

            RDSectores.setEnabled(false);
            JCSectores.setEnabled(false);
            jDateChooser3.setEnabled(false);
            jDateChooser4.setEnabled(false);

            BtnBuscar2.setEnabled(false);
            BtnLimpiar2.setEnabled(false);

        } else {

            RDSectores.setEnabled(true);
            jDateChooser3.setEnabled(true);
            jDateChooser4.setEnabled(true);
            JCSectores.setEnabled(true);
            BtnBuscar2.setEnabled(true);
            BtnLimpiar2.setEnabled(true);

        }
    }//GEN-LAST:event_RDPersonalizadaActionPerformed

    private void RDSectoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RDSectoresActionPerformed
        if (RDSectores.isSelected() == true) {

            jDateChooser1.setEnabled(false);
            JCEstados.setEnabled(false);

            jDateChooser2.setEnabled(false);
            RDPersonalizada.setEnabled(false);

            Btnbuscar1.setEnabled(false);
            BtnLimpiar1.setEnabled(false);

            RDSectores.setEnabled(true);
            jDateChooser3.setEnabled(true);
            jDateChooser4.setEnabled(true);

            BtnBuscar2.setEnabled(true);
            BtnLimpiar2.setEnabled(true);

        } else {

            JCEstados.setEnabled(true);

            jDateChooser1.setEnabled(true);

            jDateChooser2.setEnabled(true);
            RDPersonalizada.setEnabled(true);

            Btnbuscar1.setEnabled(true);
            BtnLimpiar1.setEnabled(true);

        }
    }//GEN-LAST:event_RDSectoresActionPerformed

    private void Btnbuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btnbuscar1ActionPerformed

        String consulta = "";
        if (RDPersonalizada.isSelected() == true) {

            Date fecha1 = jDateChooser1.getDate();
            SimpleDateFormat formatofecha = new SimpleDateFormat("dd/MM/yyyy");

            String fec1 = "" + formatofecha.format(fecha1);

            Date fecha2 = jDateChooser2.getDate();
            SimpleDateFormat formatofecha2 = new SimpleDateFormat("dd/MM/yyyy");
            String fec2 = "" + formatofecha2.format(fecha2);

            consulta = "SELECT * FROM querico.ordenesp WHERE fecha  BETWEEN '" + fec1 + "' AND '" + fec2 + "' ";

            if (JCEstados.getSelectedItem().equals("Proceso")) {

                consulta = "SELECT * FROM querico.ordenesp WHERE estado='Proceso' AND fecha  BETWEEN '" + fec1 + "' AND '" + fec2 + "' ";
            }
            if (JCEstados.getSelectedItem().equals("")) {

                consulta = "SELECT * FROM querico.ordenesp";

            }
            if (JCEstados.getSelectedItem().equals("Suspendido")) {

                consulta = "SELECT * FROM querico.ordenesp WHERE estado='Suspendido' AND fecha  BETWEEN '" + fec1 + "' AND '" + fec2 + "' ";
            }
            if (JCEstados.getSelectedItem().equals("Cerrado")) {

                consulta = "SELECT * FROM querico.ordenesp WHERE estado='Cerrado' AND fecha  BETWEEN '" + fec1 + "' AND '" + fec2 + "' ";
            }
            if (JCEstados.getSelectedItem().equals("Otros")) {

                consulta = "SELECT * FROM querico.ordenesp WHERE estado='Otros' AND fecha  BETWEEN '" + fec1 + "' AND '" + fec2 + "' ";
            } 
            String[] titulos = {"Num OT", "Solicitante", "Fecha", "Sector", "Detalle trabajo", "Prioridad", "Estado Solicitud", "Inicio", "Tipo trabajo", "Materiales", "Obs Responsable", "Estado", "Cierre"};
            String[] registros = new String[13];
            DefaultTableModel tabla = new DefaultTableModel(null, titulos);

            try {
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(consulta);

                while (rs.next()) {

                    registros[0] = rs.getString("ot");
                    registros[1] = rs.getString("solicitante");
                    registros[2] = rs.getString("fecha");
                    registros[3] = rs.getString("sector");
                    registros[4] = rs.getString("detalle");
                    registros[5] = rs.getString("prioridad");
                    registros[6] = rs.getString("estados");
                    registros[7] = rs.getString("f_inicio");
                    registros[8] = rs.getString("sector_def");
                    registros[9] = rs.getString("materiales");
                    registros[10] = rs.getString("obs_resp");
                    registros[11] = rs.getString("estado");
                    registros[12] = rs.getString("f_cierre");
                    tabla.addRow(registros);

                }
                JTOtt.setModel(tabla);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al monstrar el mensaje" + e);
            }
        }


    }//GEN-LAST:event_Btnbuscar1ActionPerformed

    private void JCEstadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCEstadosActionPerformed

//         if(JCEstados.getSelectedItem().equals("Todo")){
//           
//            
//      String consulta= "";
//           consulta = "SELECT * FROM querico.ordenesp" ;
//            String[] titulos = {"Num OT", "Solicitante", "Fecha", "Sector", "Detalle trabajo", "Prioridad", "Observaciones", "Inicio", "Sector Def", "Materiales", "Obs Responsable", "Estado", "Cierre"};
//        String[] registros = new String[13];
//        DefaultTableModel tabla = new DefaultTableModel(null, titulos);
//         try {
//            Statement st = con.createStatement();
//            ResultSet rs = st.executeQuery(consulta);
//
//            while (rs.next()) {
//
//                registros[0] = rs.getString("ot");
//                registros[1] = rs.getString("solicitante");
//                registros[2] = rs.getString("fecha");
//                registros[3] = rs.getString("sector");
//                registros[4] = rs.getString("detalle");
//                registros[5] = rs.getString("prioridad");
//                registros[6] = rs.getString("observaciones");
//                registros[7] = rs.getString("f_inicio");
//                registros[8] = rs.getString("sector_def");
//                registros[9] = rs.getString("materiales");
//                registros[10] = rs.getString("obs_resp");
//                registros[11] = rs.getString("estado");
//                registros[12] = rs.getString("f_cierre");
//                tabla.addRow(registros);
//
//            }
//            JTOtt.setModel(tabla);
//
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error al monstrar el mensaje" + e);
//        }
//        }if(JCEstados.getSelectedItem().equals("Suspendido")){
//            
//           
//      String consulta= "";
//           consulta = "SELECT * FROM querico.ordenesp WHERE estado='Suspendido' ";
//            String[] titulos = {"Num OT", "Solicitante", "Fecha", "Sector", "Detalle trabajo", "Prioridad", "Observaciones", "Inicio", "Sector Def", "Materiales", "Obs Responsable", "Estado", "Cierre"};
//        String[] registros = new String[13];
//        DefaultTableModel tabla = new DefaultTableModel(null, titulos);
//         try {
//            Statement st = con.createStatement();
//            ResultSet rs = st.executeQuery(consulta);
//
//            while (rs.next()) {
//
//                registros[0] = rs.getString("ot");
//                registros[1] = rs.getString("solicitante");
//                registros[2] = rs.getString("fecha");
//                registros[3] = rs.getString("sector");
//                registros[4] = rs.getString("detalle");
//                registros[5] = rs.getString("prioridad");
//                registros[6] = rs.getString("observaciones");
//                registros[7] = rs.getString("f_inicio");
//                registros[8] = rs.getString("sector_def");
//                registros[9] = rs.getString("materiales");
//                registros[10] = rs.getString("obs_resp");
//                registros[11] = rs.getString("estado");
//                registros[12] = rs.getString("f_cierre");
//                tabla.addRow(registros);
//
//            }
//            JTOtt.setModel(tabla);
//
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error al monstrar el mensaje" + e);
//        }
//        }
//        if(JCEstados.getSelectedItem().equals("Proceso")){
//          
//      String consulta= "";
//           consulta = "SELECT * FROM querico.ordenesp WHERE estado='Proceso'";
//            String[] titulos = {"Num OT", "Solicitante", "Fecha", "Sector", "Detalle trabajo", "Prioridad", "Observaciones", "Inicio", "Sector Def", "Materiales", "Obs Responsable", "Estado", "Cierre"};
//        String[] registros = new String[13];
//        DefaultTableModel tabla = new DefaultTableModel(null, titulos);
//         try {
//            Statement st = con.createStatement();
//            ResultSet rs = st.executeQuery(consulta);
//
//            while (rs.next()) {
//
//                registros[0] = rs.getString("ot");
//                registros[1] = rs.getString("solicitante");
//                registros[2] = rs.getString("fecha");
//                registros[3] = rs.getString("sector");
//                registros[4] = rs.getString("detalle");
//                registros[5] = rs.getString("prioridad");
//                registros[6] = rs.getString("observaciones");
//                registros[7] = rs.getString("f_inicio");
//                registros[8] = rs.getString("sector_def");
//                registros[9] = rs.getString("materiales");
//                registros[10] = rs.getString("obs_resp");
//                registros[11] = rs.getString("estado");
//                registros[12] = rs.getString("f_cierre");
//                tabla.addRow(registros);
//
//            }
//            JTOtt.setModel(tabla);
//
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error al monstrar el mensaje" + e);
//        }
//        }if(JCEstados.getSelectedItem().equals("Cerrado")){
//           
//      String consulta= "";
//           consulta = "SELECT * FROM querico.ordenesp WHERE estado='Cerrado' ";
//            String[] titulos = {"Num OT", "Solicitante", "Fecha", "Sector", "Detalle trabajo", "Prioridad", "Observaciones", "Inicio", "Sector Def", "Materiales", "Obs Responsable", "Estado", "Cierre"};
//        String[] registros = new String[13];
//        DefaultTableModel tabla = new DefaultTableModel(null, titulos);
//         try {
//            Statement st = con.createStatement();
//            ResultSet rs = st.executeQuery(consulta);
//
//            while (rs.next()) {
//
//                registros[0] = rs.getString("ot");
//                registros[1] = rs.getString("solicitante");
//                registros[2] = rs.getString("fecha");
//                registros[3] = rs.getString("sector");
//                registros[4] = rs.getString("detalle");
//                registros[5] = rs.getString("prioridad");
//                registros[6] = rs.getString("observaciones");
//                registros[7] = rs.getString("f_inicio");
//                registros[8] = rs.getString("sector_def");
//                registros[9] = rs.getString("materiales");
//                registros[10] = rs.getString("obs_resp");
//                registros[11] = rs.getString("estado");
//                registros[12] = rs.getString("f_cierre");
//                tabla.addRow(registros);
//
//            }
//            JTOtt.setModel(tabla);
//
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error al monstrar el mensaje" + e);
//        }
//         
//        }if(JCEstados.getSelectedItem().equals("Otros")){
//           
//      String consulta= "";
//           consulta = "SELECT * FROM querico.ordenesp WHERE estado='Otros' ";
//            String[] titulos = {"Num OT", "Solicitante", "Fecha", "Sector", "Detalle trabajo", "Prioridad", "Observaciones", "Inicio", "Sector Def", "Materiales", "Obs Responsable", "Estado", "Cierre"};
//        String[] registros = new String[13];
//        DefaultTableModel tabla = new DefaultTableModel(null, titulos);
//         try {
//            Statement st = con.createStatement();
//            ResultSet rs = st.executeQuery(consulta);
//
//            while (rs.next()) {
//
//                registros[0] = rs.getString("ot");
//                registros[1] = rs.getString("solicitante");
//                registros[2] = rs.getString("fecha");
//                registros[3] = rs.getString("sector");
//                registros[4] = rs.getString("detalle");
//                registros[5] = rs.getString("prioridad");
//                registros[6] = rs.getString("observaciones");
//                registros[7] = rs.getString("f_inicio");
//                registros[8] = rs.getString("sector_def");
//                registros[9] = rs.getString("materiales");
//                registros[10] = rs.getString("obs_resp");
//                registros[11] = rs.getString("estado");
//                registros[12] = rs.getString("f_cierre");
//                tabla.addRow(registros);
//
//            }
//            JTOtt.setModel(tabla);
//
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error al monstrar el mensaje" + e);
//        }
//         
//        }

    }//GEN-LAST:event_JCEstadosActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            String path = "C:\\NetBeansProjects\\QueRico\\src\\Reportes\\R_OTESTADOS.jasper";

            JasperReport reporte = (JasperReport) JRLoader.loadObjectFromFile(path);
            Map parametros = new HashMap();
//            Map parametros = new HashMap();

            parametros.put("estado", JCEstados.getSelectedItem().toString());

            Date fecha1 = jDateChooser1.getDate();
            SimpleDateFormat formatofecha = new SimpleDateFormat("dd/MM/YYYY");

            String fec1 = "" + formatofecha.format(fecha1);

            Date fecha2 = jDateChooser2.getDate();
            SimpleDateFormat formatofecha2 = new SimpleDateFormat("dd/MM/YYYY");
            String fec2 = "" + formatofecha2.format(fecha2);

            parametros.put("f_ini", fec1);
            parametros.put("f_fin", fec2);

            JasperPrint jprint = JasperFillManager.fillReport(reporte, parametros, con);

            JasperViewer view = new JasperViewer(jprint, false);

            view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);

            view.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(DetalleIngreso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void BtnLimpiar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLimpiar1ActionPerformed
        jDateChooser1.setDate(null);
        jDateChooser2.setDate(null);
        JCEstados.getSelectedItem().equals("");
    }//GEN-LAST:event_BtnLimpiar1ActionPerformed

    private void JCSectoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCSectoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCSectoresActionPerformed

    private void BtnBuscar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBuscar2ActionPerformed
        String consulta = "";
        if (RDSectores.isSelected() == true) {

            Date fecha1 = jDateChooser3.getDate();
            SimpleDateFormat formatofecha = new SimpleDateFormat("dd/MM/YYYY");

            String fec1 = "" + formatofecha.format(fecha1);

            Date fecha2 = jDateChooser4.getDate();
            SimpleDateFormat formatofecha2 = new SimpleDateFormat("dd/MM/YYYY");
            String fec2 = "" + formatofecha2.format(fecha2);

            consulta = "SELECT * FROM querico.ordenesp WHERE fecha  BETWEEN '" + fec1 + "' AND '" + fec2 + "' ";

            if (JCSectores.getSelectedItem().equals("Playa")) {

                consulta = "SELECT * FROM querico.ordenesp WHERE sector='Playa' AND fecha  BETWEEN '" + fec1 + "' AND '" + fec2 + "' ";
            }
            if (JCSectores.getSelectedItem().equals("Desplume")) {

                consulta = "SELECT * FROM querico.ordenesp WHERE sector='Desplume' AND fecha  BETWEEN '" + fec1 + "' AND '" + fec2 + "'";

            }
            if (JCSectores.getSelectedItem().equals("Eviscerado")) {

                consulta = "SELECT * FROM querico.ordenesp WHERE sector='Eviscerado' AND fecha  BETWEEN '" + fec1 + "' AND '" + fec2 + "' ";
            }
            if (JCSectores.getSelectedItem().equals("Chiller")) {

                consulta = "SELECT * FROM querico.ordenesp WHERE sector='Chiller' AND fecha  BETWEEN '" + fec1 + "' AND '" + fec2 + "' ";
            }
            if (JCSectores.getSelectedItem().equals("Empaque")) {

                consulta = "SELECT * FROM querico.ordenesp WHERE sector='Empaque' AND fecha  BETWEEN '" + fec1 + "' AND '" + fec2 + "' ";
            }
            if (JCSectores.getSelectedItem().equals("Tunel Paletizado")) {

                consulta = "SELECT * FROM querico.ordenesp WHERE sector='Tunel P' AND fecha  BETWEEN '" + fec1 + "' AND '" + fec2 + "' ";
            }
            if (JCSectores.getSelectedItem().equals("Trozado")) {

                consulta = "SELECT * FROM querico.ordenesp WHERE sector='Trozado' AND fecha  BETWEEN '" + fec1 + "' AND '" + fec2 + "' ";
            }
            if (JCSectores.getSelectedItem().equals("Otros")) {

                consulta = "SELECT * FROM querico.ordenesp WHERE sector='Otros' AND fecha  BETWEEN '" + fec1 + "' AND '" + fec2 + "' ";
            }

            String[] titulos = {"Num OT", "Solicitante", "Fecha", "Sector", "Detalle trabajo", "Prioridad", "Estados Solicitud", "Inicio", "Tipo trabajo", "Materiales", "Obs Responsable", "Estado", "Cierre"};
            String[] registros = new String[13];
            DefaultTableModel tabla = new DefaultTableModel(null, titulos);

            try {
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(consulta);

                while (rs.next()) {

                    registros[0] = rs.getString("ot");
                    registros[1] = rs.getString("solicitante");
                    registros[2] = rs.getString("fecha");
                    registros[3] = rs.getString("sector");
                    registros[4] = rs.getString("detalle");
                    registros[5] = rs.getString("prioridad");
                    registros[6] = rs.getString("estados");
                    registros[7] = rs.getString("f_inicio");
                    registros[8] = rs.getString("sector_def");
                    registros[9] = rs.getString("materiales");
                    registros[10] = rs.getString("obs_resp");
                    registros[11] = rs.getString("estado");
                    registros[12] = rs.getString("f_cierre");
                    tabla.addRow(registros);

                }
                JTOtt.setModel(tabla);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al monstrar el mensaje" + e);
            }

            
        }
    }//GEN-LAST:event_BtnBuscar2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            String path = "C:\\NetBeansProjects\\QueRico\\src\\Reportes\\ReporteSectores.jasper";

            JasperReport reporte = (JasperReport) JRLoader.loadObjectFromFile(path);
            Map parametros = new HashMap();
//            Map parametros = new HashMap();

            parametros.put("sectores", JCSectores.getSelectedItem().toString());

            Date fecha1 = jDateChooser3.getDate();
            SimpleDateFormat formatofecha = new SimpleDateFormat("dd/MM/YYYY");

            String fec1 = "" + formatofecha.format(fecha1);

            Date fecha2 = jDateChooser4.getDate();
            SimpleDateFormat formatofecha2 = new SimpleDateFormat("dd/MM/YYYY");
            String fec2 = "" + formatofecha2.format(fecha2);

            parametros.put("f_ini", fec1);
            parametros.put("f_fin", fec2);

            JasperPrint jprint = JasperFillManager.fillReport(reporte, parametros, con);

            JasperViewer view = new JasperViewer(jprint, false);

            view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);

            view.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(DetalleIngreso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void BtnLimpiar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLimpiar2ActionPerformed
        jDateChooser3.setDate(null);
        jDateChooser4.setDate(null);
        JCSectores.getSelectedItem();
    }//GEN-LAST:event_BtnLimpiar2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReporteOt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReporteOt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReporteOt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReporteOt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReporteOt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBuscar2;
    private javax.swing.JButton BtnLimpiar1;
    private javax.swing.JButton BtnLimpiar2;
    private javax.swing.JButton Btnbuscar1;
    private javax.swing.JComboBox<String> JCEstados;
    private javax.swing.JComboBox<String> JCSectores;
    private javax.swing.JTable JTOtt;
    private javax.swing.JRadioButton RDPersonalizada;
    private javax.swing.JRadioButton RDSectores;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private com.toedter.calendar.JDateChooser jDateChooser4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
